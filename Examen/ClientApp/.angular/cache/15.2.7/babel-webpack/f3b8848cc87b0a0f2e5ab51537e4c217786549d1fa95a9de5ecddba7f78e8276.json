{"ast":null,"code":"import { FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/api.service\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/button\";\nexport class AddProfesorComponent {\n  constructor(formBuilder, apiService) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.path = \"/examen/createProfesor\";\n    this.addProfForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.addProfForm = this.formBuilder.group({\n      nume: ['', Validators.required],\n      prenume: [''],\n      tipProfesor: ['0']\n    });\n  }\n  send() {\n    console.log(this.addProfForm.value);\n    this.apiService.post(this.path, this.addProfForm.value).subscribe(data => {\n      console.log(data);\n    }, error => {\n      console.error(error.error.message);\n    });\n  }\n}\nAddProfesorComponent.ɵfac = function AddProfesorComponent_Factory(t) {\n  return new (t || AddProfesorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n};\nAddProfesorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddProfesorComponent,\n  selectors: [[\"app-add-profesor\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"profForm\", 3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"nume\", \"type\", \"text\", \"placeholder\", \"nume\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"prenume\", \"type\", \"text\", \"placeholder\", \"prenume\"], [\"for\", \"optiune\"], [\"id\", \"optiune\", \"formCOntrolName\", \"tipProfesor\"], [\"value\", \"0\"], [\"value\", \"1\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function AddProfesorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Nume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Prenume\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 1)(10, \"label\", 4);\n      i0.ɵɵtext(11, \"TipProfesor:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-select\", 5)(13, \"mat-option\", 6);\n      i0.ɵɵtext(14, \"Standard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-option\", 7);\n      i0.ɵɵtext(16, \"Laborant\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function AddProfesorComponent_Template_button_click_17_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(18, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.addProfForm);\n    }\n  },\n  dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatInputModule, i3.MatInput, i4.MatFormField, i4.MatLabel, MatSelectModule, i5.MatSelect, i6.MatOption, MatButtonModule, i7.MatButton],\n  styles: [\".profForm[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  margin: 5vw 0 0 0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtcHJvZmVzb3IvYWRkLXByb2Zlc29yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2ZGb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW46IDV2dyAwIDAgMDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAmCA,SAAS,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAErG,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,eAAe,QAAQ,0BAA0B;;;;;;;;;AAc1D,OAAM,MAAOC,oBAAoB;EAG/BC,YAA6BC,WAAwB,EACxBC,UAAsB;IADtB,gBAAW,GAAXD,WAAW;IACX,eAAU,GAAVC,UAAU;IAFtB,SAAI,GAAW,wBAAwB;IAIxD,gBAAW,GAAc,IAAIT,SAAS,CAAC,EAAE,CAAC;EAFa;EAIvDU,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACxCC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC,GAAG;KAClB,CAAC;EACJ;EAEAC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;IAEnC,IAAI,CAACX,UAAU,CAACY,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACX,WAAW,CAACS,KAAK,CAAC,CAACG,SAAS,CAC9DC,IAAS,IAAI;MACZN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;IACnB,CAAC,EACAC,KAAU,IAAI;MACbP,OAAO,CAACO,KAAK,CAACA,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC;EACN;;AA1BWpB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnBjCC,+BAAiD;MAElCA,oBAAI;MAAAA,iBAAY;MAC3BA,2BAA+E;MACjFA,iBAAiB;MAEjBA,yCAAkC;MACrBA,uBAAO;MAAAA,iBAAY;MAC9BA,2BAA4E;MAC9EA,iBAAiB;MAEjBA,yCAAkC;MACXA,6BAAY;MAAAA,iBAAQ;MACzCA,sCAAuD;MAC/BA,yBAAQ;MAAAA,iBAAa;MAC3CA,sCAAsB;MAAAA,yBAAQ;MAAAA,iBAAa;MAI7CA,kCAA2D;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MAnBvDA,2CAAyB;;;iBDa5CjC,mBAAmB,2JACnBE,cAAc,6CACdC,eAAe,8BACfC,eAAe;EAAA+B;AAAA","names":["FormGroup","ReactiveFormsModule","Validators","MatInputModule","MatSelectModule","MatButtonModule","AddProfesorComponent","constructor","formBuilder","apiService","ngOnInit","addProfForm","group","nume","required","prenume","tipProfesor","send","console","log","value","post","path","subscribe","data","error","message","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\Examen restanta\\Template\\Examen\\ClientApp\\src\\app\\components\\add-profesor\\add-profesor.component.ts","C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\Examen restanta\\Template\\Examen\\ClientApp\\src\\app\\components\\add-profesor\\add-profesor.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { ApiService } from '../../core/services/api.service';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\n@Component({\n  selector: 'app-add-profesor',\n  templateUrl: './add-profesor.component.html',\n  styleUrls: ['./add-profesor.component.css'],\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n  ]\n})\nexport class AddProfesorComponent implements OnInit {\n\n  private readonly path: string = \"/examen/createProfesor\";\n  constructor(private readonly formBuilder: FormBuilder,\n              private readonly apiService: ApiService) { }\n\n  addProfForm: FormGroup = new FormGroup({});\n\n  ngOnInit() {\n    this.addProfForm = this.formBuilder.group({\n      nume: ['', Validators.required],\r\n      prenume: [''],\r\n      tipProfesor: ['0']\r\n    });\r\n  }\n\n  send() {\n    console.log(this.addProfForm.value);\n\n    this.apiService.post(this.path, this.addProfForm.value).subscribe(\r\n      (data: any) => {\r\n        console.log(data)\r\n      },\r\n      (error: any) => {\r\n        console.error(error.error.message);\r\n      });\r\n  }\n}\n","<form class=\"profForm\" [formGroup]=\"addProfForm\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Nume</mat-label>\n    <input matInput formControlName=\"nume\" type=\"text\" placeholder=\"nume\" required>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Prenume</mat-label>\n    <input matInput formControlName=\"prenume\" type=\"text\" placeholder=\"prenume\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <label for=\"optiune\">TipProfesor:</label>\n    <mat-select id=\"optiune\" formCOntrolName=\"tipProfesor\">\n      <mat-option value=\"0\">Standard</mat-option>\n      <mat-option value=\"1\">Laborant</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" (click)=\"send()\">Submit</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}